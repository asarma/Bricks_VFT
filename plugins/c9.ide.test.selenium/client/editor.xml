<a:application xmlns:a="http://ajax.org/2005/aml">
    <a:state id="stTestRecord" />
    <a:menu id="mnuRunSettings2" />

    <a:hbox id="mainUiRecorder" anchors="0 0 0 0" edge="0 4 3 6" padding="3" visible="false" splitters="true">
        <a:vbox width="340" id="vboxUiRecorder">
            <a:bar id="barUiRecorder" skin="basic" style="background:#2f3032;border:1px solid #222425;border-radius:6px 6px 0 0 ;">
                <a:hbox align="center" padding="0" edge="3 3 3 4">
                    <a:button id="btnUiRecordStart" 
                      skin     = "c9-toolbarbutton" 
                      icon     = "{stTestRecord.active ? 'recording-animation.gif' : 'record.png'}" 
                      class    = "record" 
                      caption  = "{stTestRecord.active ? 'Stop' : 'Record'}" />
                    
                    <a:splitbutton id="btnTestRunInSelEditor"
                      icon     = "run.png"
                      caption  = "Run"
                      visible  = "{!stTestRun.active}"
                      disabled = "{stTestRecord.active}"
                      onclick  = "require('ext/selenium/editor').run();"
                      submenu  = "mnuRunSettings2" />
                    
                    <a:button id="btnTestStopInSelEditor"
                      icon     = "stop.png"
                      caption  = "Stop"
                      skin     = "c9-toolbarbutton"
                      onclick  = "require('ext/selenium/editor').stopPlayback()"
                      visible  = "{!btnTestRunInSelEditor.visible}" />
                    
                    <a:button id="btnUiRecordRemove" 
                      skin     = "c9-toolbarbutton" 
                      disabled = "{!dgUiRecorder.selected}" 
                      onclick  = "dgUiRecorder.remove()"
                      caption  = "Remove" />
                      
                    <a:splitbutton id="btnUiRecordInsert" 
                      onclick  = "mnuInsert.dispatchEvent('itemclick')"
                      caption  = "Insert" 
                      submenu  = "mnuInsert" />
                    
                    <a:menu id="mnuInsert" 
                      onitemclick = "
                        var se = require('ext/selenium/editor');
                        if (event.value == 'assert-picker')
                            se.startAddAssert();
                        else if (event.value == 'file')
                            se.includeTestFile();
                        else {
                            var s = event.value.split('-');
                            se.addNewNode(s[0], s[1]);
                        }
                      ">
                        <a:item type="radio" value="test" caption="Test" selected="true" />
                        <a:item type="radio" value="action" caption="Action" />
                        <a:item type="radio" value="assert-picker" disabled="{!!%[{dgUiRecorder.selected}::self::test]}" caption="Assertion (picker)" />
                        <a:item type="radio" value="assert" disabled="{!!%[{dgUiRecorder.selected}::self::test]}" caption="Assertion (code)" />
                        <a:divider />
                        <a:item type="radio" value="file" caption="Include file" />
                        <a:divider />
                        <a:item type="radio" value="action-setTimeout" caption="setTimeout" />
                        <a:item type="radio" value="action-hold" caption="hold" />
                        <a:item type="radio" value="action-waitFor" caption="waitFor" />
                        <a:item type="radio" value="action-get" caption="get" />
                        <a:item type="radio" value="action-execute" caption="execute" />
                        <a:item type="radio" value="action-executeAsync" caption="executeAsync" />
                    </a:menu>
                     
                    <a:button skin="c9-toolbarbutton" onclick="
                        uiRecordPreview.setAttribute('visible', !uiRecordPreview.visible);
                        if (uiRecordPreview.visible) {
                            vboxUiRecorder.setAttribute('width', vboxUiRecorder.lastWidth);
                            vboxUiRecorder.removeAttribute('flex');
                        }
                        else {
                            vboxUiRecorder.lastWidth = vboxUiRecorder.$ext.offsetWidth;
                            vboxUiRecorder.removeAttribute('width');
                            vboxUiRecorder.setAttribute('flex', 2);
                        }
                    " caption="{uiRecordPreview.visible ? '&gt;&gt;' : '&lt;&lt;'}" />
                </a:hbox>
            </a:bar>
            
            <a:menu id="mnuUiRecorder">
                <a:item match="[node()]" onclick="
                    apf.clipboard.cutSelection(apf.activeElement);
                ">Cut</a:item>
                <a:item match="[node()]" onclick="
                    apf.clipboard.copySelection(apf.activeElement);
                ">Copy</a:item>
                <a:item 
                  disabled="{
                    apf.clipboard.empty ||
                    !apf.activeElement.isDropAllowed(
                        apf.clipboard.data[0], apf.activeElement.selected);
                  }" 
                  onclick="
                    apf.clipboard.pasteSelection(apf.activeElement);
                  ">Paste</a:item>
                <a:divider />
                <a:item match="[action|assert|test]" onclick="dgUiRecorder.remove()">Remove</a:item>
                <a:item match="[action]" onclick="require('ext/selenium/editor').startAddAssert()">Add Assertion</a:item>
                <a:divider />
                <a:item submenu="mnuColumns">Columns</a:item>
            </a:menu>
            
            <a:menu id="mnuColumns">
                <a:item type="check" checked="{colUiRecorder1.visible}" value="colUiRecorder1">Name</a:item>
                <a:item type="check" checked="{colUiRecorder2.visible}" value="colUiRecorder2">Value</a:item>
                <a:item type="check" checked="{colUiRecorder3.visible}" value="colUiRecorder3">Element</a:item>
                <a:item type="check" checked="{colUiRecorder4.visible}" value="colUiRecorder4">Status</a:item>
            </a:menu>
        
            <a:bar skin="basic" flex="1">
                <a:datagrid 
                  id          = "dgUiRecorder"
                  options     = "size"
                  anchors     = "0 0 0 0"
                  border      = "0 1 1 1"
                  each        = "[action|assert|test|error]"
                  multiselect = "true"
                  class       = "noscrollbar"
                  scrollbar   = "sbShared 20 2 2"
                  style       = "border-radius:0 0 6px 6px"
                  startcollapsed = "false"
                  contextmenu = "mnuUiRecorder"
                  onmouseover = "require('ext/selenium/editor').highlightElement(event)"
                  onmouseout  = "require('ext/selenium/editor').hideHighlightElements(event)">
                    <a:column id="colUiRecorder1" 
                      caption   = "Name"
                      visible   = "[{require('ext/settings/settings').model}::editors/uirecorder/colname/@visible]"
                      width     = "[{require('ext/settings/settings').model}::editors/uirecorder/colname/@width]" 
                      icon      = "{require('ext/selenium/editor').getIcon([@status])}" 
                      value     = "[@caption|@name]" 
                      tree      = "1" 
                      editor    = "textbox" 
                      skin      = "tbsimple" 
                      class     = "tbtree" />
                    <a:column id="colUiRecorder2" 
                      caption   = "Value" 
                      visible   = "[{require('ext/settings/settings').model}::editors/uirecorder/colvalue/@visible]"
                      width     = "[{require('ext/settings/settings').model}::editors/uirecorder/colvalue/@width]" 
                      value     = "[@value]" 
                      editor    = "textbox" 
                      skin      = "tbsimple" />
                    <a:column id="colUiRecorder3" 
                      caption   = "Element" 
                      visible   = "[{require('ext/settings/settings').model}::editors/uirecorder/colelement/@visible]"
                      width     = "[{require('ext/settings/settings').model}::editors/uirecorder/colelement/@width]" 
                      value     = "{[@element]||''}" 
                      editor    = "textbox" 
                      skin      = "tbsimple" />
                    <a:column id="colUiRecorder4" 
                      caption   = "Status" 
                      visible   = "false"
                      width     = "[{require('ext/settings/settings').model}::editors/uirecorder/colstatus/@width]" 
                      editor    = "textbox" 
                      skin      = "tbsimple"><?lm
                        if ([@status] === '0')
                            <dd style='color:red;margin:0;'>\[[@status-message]\]</dd>
                        else if ([@status] == '1')
                            <dd style='color:green;margin:0;'>\[PASS{[@status-message] && ' [@status-message]'}\]</dd>
                        else if ([@status] == '-1')
                            <dd style='margin:0;'>\[{[@status-message].uCaseFirst()}\]</dd>
                        else
                            '';
                    ?></a:column>
                    
                    <a:css match="[test]" value="testhead" />
                    <a:css match="[node()[@status='5']]" value="current_execution" />
                    
                    <a:drag match="[action|assert|test]" />
                    <a:drop 
                      match  = "[action]" 
                      target = "[action]" 
                      action = "insert-before" />
                    <a:drop 
                      match  = "[action]" 
                      target = "[test]" 
                      action = "tree-append" />
                    <a:drop 
                      match  = "[test]" 
                      target = "[test]" 
                      action = "insert-before" />
                    <a:drop 
                      match  = "[assert]" 
                      target = "[action]" 
                      action = "tree-append" />
                    <a:drop 
                      match  = "[assert]" 
                      target = "[assert]" 
                      action = "insert-before" />
                </a:datagrid>
            </a:bar>
        </a:vbox>
        <a:vbox id="uiRecordPreview" flex="3" style="border-radius:6px;">
            <a:bar skin="basic" style="background:white;border-radius:6px 6px 0 0;background : -webkit-gradient(linear, center top, center bottom, from(#e9e9e9), color-stop(1, #cbcbca));border:1px solid #9A9A9A">
                <a:hbox align="center" padding="3" edge="4 4 4 4">
                    <a:button onclick="brSeleniumPreview.back()" skin="browser-btn" icon="browser_arrowleft.png" />
                    <a:button onclick="brSeleniumPreview.forward()" skin="browser-btn" icon="browser_arrowright.png" />
                    <a:button onclick="require('ext/selenium/editor').reloadFrame()" skin="browser-btn" icon="browser_refresh.png" />
                    <a:textbox flex="1" focusselect="true" id="tbUiRecordLoc" style="border-radius:4px" />
                </a:hbox>
                <a:img src="{require('core/ide').staticPrefix + '/style/images/file-tree-load-spinner.gif'}" id="uiRecordLoadingIndicator" right="10" top="10" />
            </a:bar>
            <a:browser id="brSeleniumPreview" flex="1" style="border: 0;background:white;border-radius:0 0 6px 6px;border:1px solid #c6c6c6;border-width:0 1px 1px 1px;" />
        </a:vbox>
    </a:hbox>
</a:application>