define(function(require, exports, module) {
"use strict";

var oop = require("pivot/lib/oop");
var EventEmitter = require("pivot/lib/event_emitter").EventEmitter;

var HeaderModel = function(headers) {
    this.headers = {};
    this.axis = {
        "x": [],
        "y": [],
        "none": []
    };
    
    var that = this;
    
    headers.forEach(function(header) {
        that.headers[header.name] = header;
        
        header.axis = header.axis || "none";
        var list = that.axis[header.axis];
        if (!list)
            throw new TypeError("Invalid axis: " + header.axis);
        
        list.push(header);
    });
};

(function() {

    oop.implement(this, EventEmitter);

    this.moveHeader = function(name, axis, index) {
        var header = this.headers[name];
        if (!header) return;
        
        axis = axis || "none";
        
        var oldList = this.axis[header.axis];
        
        oldList.splice(oldList.indexOf(header), 1);
        
        var newList = this.axis[axis];
        if (!newList)
            throw new TypeError("Invalid axis: " + header.axis);
        
        if (typeof index === "undefined")
            index = newList.length;
        newList.splice(index, 0, header);
        header.axis = axis;
        
        this._emit("change");
    };


}).call(HeaderModel.prototype);

exports.HeaderModel = HeaderModel;

});