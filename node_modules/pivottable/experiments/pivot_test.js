/*global describe it before */

define(function(require, exports, module) {
    "use strict";

    var expect = require("../node_modules/chai/chai");
    
    var JsonDataProvider = require("./json.file");
    var HumongousDataProvider = require("./humongous.mock");
    var Pivot        = require("pivot/pivot");
    
    describe("Pivot", function(){
        var providerJson, providerBig, expected = [], pivot;
        before(function(done){
            var div = document.body.appendChild(document.createElement("div"));
            div.style.position = "fixed";
            div.style.left = "20px";
            div.style.height = "80%";
            div.style.right = "20px";
            div.style.bottom = "20px";
            div.style.background = "rgba(0,0,0,0.1)";
            
            pivot = new Pivot(div);
            pivot.setOption("totals", true);
            
            providerJson = new JsonDataProvider();
            providerJson.loadFromUrl("summary.json", function(){
                providerJson.setQuery(
                  ["product", "city"],
                  ["month", "year", "person"], 
                  {kind: "sum", entity: "value"},
                  true,
                  function(){ done(); });
            });
            
            providerBig = new HumongousDataProvider();
            providerBig.load([
                { name: "person", length: 20000 }, //20 thousand
                { name: "product", length: 1000000 }, //1 million
                { name: "store", length: 5000 },
                { name: "month", length: 12 },
                { name: "year", length: 75 },
            ], 100, function(name, index){
                return name + " " + (index + 1);
            }, function (i, j){
                return j === 0 ? "Row " + (i + 1) : (j + 1);
            });
            providerBig.setQuery(
              ["store", "year", "month"], 
              ["person", "product"],
              {kind: "sum", entity: "value"},
              true,
              function(){ });
            
            window.addEventListener("resize", function(){
                pivot.resize();
            })
        });
        
        describe("setDataProvider", function(){
            it('should load data into the pivot table', function(done) {
                pivot.setDataProvider(providerJson);
                // pivot.setDataProvider(providerBig);
                
                // done();
            });
        });
        // describe("getEntityRange()", function(){
        //     it('should return a sorted list of strings of the values of one entity', function(done) {
        //         provider.getEntityRange("product", 0, null, function(err, list){
        //             expect(list).deep.equal(["Chair", "Ladder", "Spanner"]);
        //         });
        //         provider.getEntityRange("person", 0, null, function(err, list){
        //             expect(list).deep.equal(["Ed Spencer", "Molham Aref", "Ruben Daniels"]);
        //         });
        //         provider.getEntityRange("person", 1, 2, function(err, list){
        //             expect(list).deep.equal(["Molham Aref", "Ruben Daniels"]);
        //             done();
        //         });
        //     });
        //     it('should return a sorted list of ints of the values of one entity', function(done) {
        //         provider.getEntityRange("year", 0, null, function(err, list){
        //             expect(list).deep.equal(["2009", "2010"]);
        //         });
        //         provider.getEntityRange("month", 3, 6, function(err, list){
        //             expect(list).deep.equal(["4", "5", "6", "7", "8", "9"]);
        //             done();
        //         });
        //     });
        // });
        // describe("setQuery()", function(){
        //     it('should set a query that determines the view', function(done) {
        //         provider.setQuery(
        //             ["city", "year"],
        //             ["month", "product", "person"], 
        //             {kind: "sum", entity: "value"});
        //         
        //         expect(provider.view).length(108);
        //         expect(provider.view[0][1]).equal(4);
        //         
        //         done();
        //     });
        // });
        // describe("getDataRange()", function(){
        //     it('should get a viewport on the data', function(done) {
        //         provider.getDataRange(
        //             {start: 40, length: 60},
        //             {start: 0, length: 20},
        //             function(err, view){
        //                 debugger;
        //                 done();
        //             }
        //         );
        //     });
        // });
    });
    
    (typeof onload == "function") && onload();
});

// if (typeof module !== "undefined" && module === require.main) {
//     mocha.run();
// }